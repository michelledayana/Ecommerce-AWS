name: Deploy Product Create Service to AWS

on:
  push:
    paths:
      - 'Backend/userDomain/user_create_service/**'
    branches:
      - QA

jobs:
  build-and-deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest \
            -f Backend/userDomain/user_create_service/Dockerfile \
            Backend/userDomain/user_create_service/
          docker push ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Connect to EC2 and Deploy User Create Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_USER_CREATE }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "🔍 Verificando si Docker está instalado..."
            if ! command -v docker &> /dev/null; then
              echo "📦 Instalando Docker..."
              sudo apt-get update -y
              sudo apt-get install -y docker.io docker-compose
              sudo systemctl start docker
            fi

            echo "🛑 Deteniendo y eliminando contenedor previo..."
            docker stop user_create_service || true
            docker rm user_create_service || true

            echo "🧹 Limpiando imágenes anteriores..."
            docker image prune -af

            echo "📥 Descargando última imagen..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

            echo "🚀 Ejecutando nuevo contenedor..."
            docker run -d \
              --name user_create_service \
              -p ${{ secrets.SERVER_PORT_CREATE_PRODUCT }}:${{ secrets.SERVER_PORT_CREATE_PRODUCT }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

            echo "🔍 Verificando despliegue..."
            docker ps | grep user_create_service && echo '✅ Despliegue exitoso.' || (echo '❌ Error en despliegue.' && exit 1)
