name: Deploy Product Create Service to AWS

on:
  push:
    paths:
      - 'Backend/userDomain/user_create_service/**'
    branches:
      - QA

jobs:
  build-and-deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest \
            -f Backend/productManagement/userDomain/user_create_service/Dockerfile \
            Backend/productManagement/userDomain/user_create_service/
          docker push ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: üöÄ Connect to EC2 and Deploy Product Create Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_PRODUCT_CREATE }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîç Verificando si Docker est√° instalado..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Instalando Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker $USER
              newgrp docker
            fi

            echo "üõë Deteniendo y eliminando contenedor previo..."
            docker stop user_create_service || true
            docker rm user_create_service || true

            echo "üßπ Limpiando im√°genes anteriores..."
            docker image prune -af

            echo "üì• Descargando √∫ltima imagen..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

            echo "üöÄ Ejecutando nuevo contenedor..."
            docker run -d \
              --name user_create_service \
              -p ${{ secrets.SERVER_PORT_CREATE_PRODUCT }}:${{ secrets.SERVER_PORT_CREATE_PRODUCT }} \
              -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
              -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/user_create_service:latest

            echo "üîç Verificando despliegue..."
            docker ps | grep user_create_service && echo '‚úÖ Despliegue exitoso.' || (echo '‚ùå Error en despliegue.' && exit 1)
