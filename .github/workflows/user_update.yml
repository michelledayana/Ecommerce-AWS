name: Deploy User update service

on:
  push:
    paths:
      - 'Backend/userDomain/user_update_service/**'
    branches:
      - QA

jobs:
  build-and-deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Build and push Docker image
        working-directory: Backend/userDomain/user_update_service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-update-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/user-update-service:latest


  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: 🚀 Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_USER_UPDATE}}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "🔍 Verificando Docker..."
            if ! command -v docker &> /dev/null; then
              echo "📦 Instalando Docker..."
              sudo apt-get update -y
              sudo apt-get install -y docker.io docker-compose
              sudo systemctl start docker
            fi

            echo "🛑 Deteniendo contenedor anterior si existe..."
            docker stop user-update-service || true
            docker rm user-update-service || true

            echo "🧹 Eliminando imágenes antiguas..."
            docker image prune -af

            echo "📥 Descargando nueva imagen..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/user-update-service:latest
            echo "🚀 Iniciando contenedor..."
            docker run -d \
              --name user_get_id_service \
              -p ${{ secrets.SERVER_PORT_UPDATE_USER}}:3011 \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/user-update-service:latest

